FLOORS_TO_NUMS = {'подвал, 1': 2, 'цоколь, 1': 2, '1,2,антресоль': 3, '1,2,3':3,
                  '1, подвал': 2, '1,2,3,4':4, '1,2': 2, '1,2,3,4,5': 5, '5, мансарда': 2,
                  '1-й, подвал': 2, '1, подвал, антресоль': 3, 'мезонин': 3, 'подвал, 1-3': 4,
                  '3, Мансарда (4 эт)': 2, 'подвал,1': 2, '1, антресоль': 2, '1-3':3,
                  'подвал,1,2,3,4,5': 6, '1, 2.': 2, 'подвал , 1 ': 2, '1, 2': 2, 
                  'подвал , 1 ': 2, 'мансарда (4эт)': 1, 'подвал, 1,2,3':4, '1 + подвал (без отделки)': 2,
                  '2,3': 2, '4, 5': 2, '1-й, 2-й': 2, '1 этаж, подвал': 2, '1, цоколь': 2, 'подвал, 1-7, техэтаж': 9,
                  '1, 2, 3': 3, '1-7': 7, 'Цоколь, 1,2(мансарда)': 3, 'подвал, 3. 4 этаж':3,'подвал, 1-4 этаж':5,
                  'подва, 1.2 этаж':3, '2, 3':2, '1.2':2, '7,8':2, 'подвал, цоколь, 1 этаж': 2, '3, мансарда':2,
                  '1, 2':2, '1,2,3':3, '1,2,3,4': 4,'цоколь, 1, 2,3,4,5,6':7, '1,2':2, ' 1, 2, Антресоль':3,
                  '3 этаж, мансарда (4 этаж)':2, '1-й, 2-й': 2, '1,2 ':2, '1, подвал':2, '1, 2, 3':3, '1, 2 этаж': 2,
                  '1,2,3,4,5': 5, 'подвал, 1, 2': 3, '1,2,3,4, подвал': 5, '3,4':2, 'подвал,1':2, 'цокольный, 1,2':3,
                  'подвал, 1 и 4 этаж': 3, 'подвал, 2':2, '1, цоколь':2, 'подвал,1,2,3':3,
                  'технический этаж,5,6':3, ' 1-2, подвальный':3, '1, 2, 3, мансардный':4, 'подвал, 1, 2, 3':4,
                  '1,2,3, антресоль, технический этаж':5, '3, 4':2, '4, 5':2,
                  '1-3 этажи, цоколь (188,4 кв.м), подвал (104 кв.м)': 5,
                  '1-й, подвал':2, '1,2,подвал ':2,
                  '1,2,3 этаж, подвал':4, 'цоколь, 1':2, '2, 3, 4, тех.этаж':4,
                  }

REG_GROUPS = {'Адыгея': 'Другая россия',
 'Алтай': 'Сибирь',
 'Алтайский край': 'Сибирь',
 'Башкортостан': 'Другая россия',
 'Белгородская область': 'Другая россия',
 'Брянская область': 'Другая россия',
 'Волгоградская область': 'Другая россия',
 'Вологодская область': 'Другая россия',
 'Воронежская область': 'Другая россия',
 'Ивановская область': 'Другая россия',
 'Иркутская область': 'Сибирь',
 'Калининградская область': 'Другая россия',
 'Калужская область': 'Другая россия',
 'Карелия': 'Питер',
 'Кемеровская область': 'Сибирь',
 'Кировская область': 'Другая россия',
 'Коми': 'Другая россия',
 'Костромская область': 'Другая россия',
 'Краснодарский край': 'Другая россия',
 'Красноярский край': 'Сибирь',
 'Курская область': 'Другая россия',
 'Ленинградская область': 'Питер',
 'Липецкая область': 'Другая россия',
 'Мордовия': 'Другая россия',
 'Москва': 'Москва',
 'Московская область': 'Москва',
 'Нижегородская область': 'Другая россия',
 'Новосибирская область': 'Сибирь',
 'Омская область': 'Сибирь',
 'Орловская область': 'Другая россия',
 'Пензенская область': 'Другая россия',
 'Пермский край': 'Другая россия',
 'Приморский край': 'Сибирь',
 'Ростовская область': 'Другая россия',
 'Самарская область': 'Другая россия',
 'Санкт-Петербург': 'Питер',
 'Саратовская область': 'Другая россия',
 'Свердловская область': 'Сибирь',
 'Смоленская область': 'Другая россия',
 'Ставропольский край': 'Другая россия',
 'Татарстан': 'Другая россия',
 'Томская область': 'Сибирь',
 'Тульская область': 'Другая россия',
 'Тюменская область': 'Сибирь',
 'Удмуртия': 'Другая россия',
 'Ульяновская область': 'Другая россия',
 'Ханты-Мансийский АО': 'Сибирь',
 'Челябинская область': 'Сибирь',
 'Ярославская область': 'Другая россия'}

CAT_FEATURES = ['city', 'osm_city_nearest_name', 'region', 'reg_groups']


def preprocess_floor(df):
    df['floor'] = df['floor'].mask(df['floor'] == '-1.0', -1) \
              .mask(df['floor'] == '-2.0', -2) \
              .mask(df['floor'] == '-3.0', -3) \
              .mask(df['floor'] == 'подвал, 1', 1) \
              .mask(df['floor'] == 'подвал', -1) \
              .mask(df['floor'] == 'цоколь, 1', 1) \
              .mask(df['floor'] == '1,2,антресоль', 1) \
              .mask(df['floor'] == 'цоколь', 0) \
              .mask(df['floor'] == 'тех.этаж (6)', 6) \
              .mask(df['floor'] == 'Подвал', -1) \
              .mask(df['floor'] == 'Цоколь', 0) \
              .mask(df['floor'] == 'фактически на уровне 1 этажа', 1) \
              .mask(df['floor'] == '1,2,3', 1) \
              .mask(df['floor'] == '1, подвал', 1) \
              .mask(df['floor'] == '1,2,3,4', 1) \
              .mask(df['floor'] == '1,2', 1) \
              .mask(df['floor'] == '1,2,3,4,5', 1) \
              .mask(df['floor'] == '5, мансарда', 5) \
              .mask(df['floor'] == '1-й, подвал', 1) \
              .mask(df['floor'] == '1, подвал, антресоль', 1) \
              .mask(df['floor'] == 'мезонин', 2) \
              .mask(df['floor'] == 'подвал, 1-3', 1) \
              .mask(df['floor'] == '1 (Цокольный этаж)', 0) \
              .mask(df['floor'] == '3, Мансарда (4 эт)', 3) \
              .mask(df['floor'] == 'подвал,1', 1) \
              .mask(df['floor'] == '1, антресоль', 1) \
              .mask(df['floor'] == '1-3', 1) \
              .mask(df['floor'] == 'мансарда (4эт)', 4) \
              .mask(df['floor'] == '1, 2.', 1) \
              .mask(df['floor'] == 'подвал , 1 ', 1) \
              .mask(df['floor'] == '1, 2', 1) \
              .mask(df['floor'] == 'подвал, 1,2,3', 1) \
              .mask(df['floor'] == '1 + подвал (без отделки)', 1) \
              .mask(df['floor'] == 'мансарда', 3) \
              .mask(df['floor'] == '2,3', 2) \
              .mask(df['floor'] == '4, 5', 4) \
              .mask(df['floor'] == '1-й, 2-й', 1) \
              .mask(df['floor'] == '1 этаж, подвал', 1) \
              .mask(df['floor'] == '1, цоколь', 1) \
              .mask(df['floor'] == 'подвал, 1-7, техэтаж', 1) \
              .mask(df['floor'] == '3 (антресоль)', 3) \
              .mask(df['floor'] == '1, 2, 3', 1) \
              .mask(df['floor'] == 'Цоколь, 1,2(мансарда)', 1) \
              .mask(df['floor'] == 'подвал, 3. 4 этаж', 3) \
              .mask(df['floor'] == 'подвал, 1-4 этаж', 1) \
              .mask(df['floor'] == 'подва, 1.2 этаж', 1) \
              .mask(df['floor'] == '2, 3', 2) \
              .mask(df['floor'] == '7,8', 7) \
              .mask(df['floor'] == '1 этаж', 1) \
              .mask(df['floor'] == '1-й', 1) \
              .mask(df['floor'] == '3 этаж', 3) \
              .mask(df['floor'] == '4 этаж', 4) \
              .mask(df['floor'] == '5 этаж', 5) \
              .mask(df['floor'] == 'подвал,1,2,3,4,5', 1) \
              .mask(df['floor'] == 'подвал, цоколь, 1 этаж', 1) \
              .mask(df['floor'] == '3, мансарда', 3) \
              .mask(df['floor'] == 'цоколь, 1, 2,3,4,5,6', 1) \
              .mask(df['floor'] == ' 1, 2, Антресоль', 1) \
              .mask(df['floor'] == '3 этаж, мансарда (4 этаж)', 3) \
              .mask(df['floor'] == 'цокольный', 0) \
              .mask(df['floor'] == '1,2 ', 1) \
              .mask(df['floor'] == '3,4', 3) \
              .mask(df['floor'] == 'подвал, 1 и 4 этаж', 1) \
              .mask(df['floor'] == '5(мансарда)', 5) \
              .mask(df['floor'] == 'технический этаж,5,6', 5) \
              .mask(df['floor'] == ' 1-2, подвальный', 1) \
              .mask(df['floor'] == '1, 2, 3, мансардный', 1) \
              .mask(df['floor'] == 'подвал, 1, 2, 3', 1) \
              .mask(df['floor'] == '1,2,3, антресоль, технический этаж', 1) \
              .mask(df['floor'] == '3, 4', 3) \
              .mask(df['floor'] == '1-3 этажи, цоколь (188,4 кв.м), подвал (104 кв.м)', 1) \
              .mask(df['floor'] == '1,2,3,4, подвал', 1) \
              .mask(df['floor'] == '2-й', 2) \
              .mask(df['floor'] == '1, 2 этаж', 1) \
              .mask(df['floor'] == 'подвал, 1, 2', 1) \
              .mask(df['floor'] == '1-7', 1) \
              .mask(df['floor'] == '1 (по док-м цоколь)', 1) \
              .mask(df['floor'] == '1,2,подвал ', 1) \
              .mask(df['floor'] == 'подвал, 2', 2) \
              .mask(df['floor'] == 'подвал,1,2,3', 1) \
              .mask(df['floor'] == '1,2,3 этаж, подвал ', 1) \
              .mask(df['floor'] == '1,2,3 этаж, подвал', 1) \
              .mask(df['floor'] == '2, 3, 4, тех.этаж', 2) \
              .mask(df['floor'] == 'цокольный, 1,2', 1) \
              .mask(df['floor'] == 'Техническое подполье', -1) \
              .mask(df['floor'] == '1.2', 1) \
              .astype(float)
    return df